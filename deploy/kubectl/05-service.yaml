kind: Pod
apiVersion: v1
metadata:
  name: sidecar-exp
  namespace: monitoring-sidecar
  labels:
    app: proxy-app
    "vector.dev/exclude": "true"
spec:
  serviceAccountName: monitor-sidecar
  shareProcessNamespace: true

  volumes:
    - name: db-data
      persistentVolumeClaim:
        # reference the PersistentVolumeClaim
        claimName: db-persistent-volume-claim

  containers:
    - name: proxy-app
      image: omnistrate/pg-proxy:latest
      imagePullPolicy: IfNotPresent
      ports:
        - containerPort: 3001    
      env:
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          value: "9uh4CcKZ7SG77p"
        - name: POSTGRES_DB
          value: "omnistratemetadatadb"    
    - name: pg1
      image: postgres:latest
      imagePullPolicy: IfNotPresent
      env:
      - name: POSTGRES_USER
        value: "postgres"
      - name: POSTGRES_PASSWORD
        value:  "9uh4CcKZ7SG77p"
      - name: POSTGRES_DB
        value: "omnistratemetadatadb"
      volumeMounts:
        # The volume mounts  for the container
        - mountPath: /var/lib/postgres/data
          name: db-data  
      ports:
        - containerPort: 5432
        

   # - name: sidecar
   #   image: monitor-sidecar
   #   imagePullPolicy: Never
   #   envFrom:
   #     - configMapRef:
   #         name: sidecar-monitor-env-vars
   #   volumeMounts:
   #    - name: scripts
   #      mountPath: /etc/monitoring/scripts
---
kind: Service
apiVersion: v1
metadata:
  name: proxy-service
  namespace: monitoring-sidecar
spec:
  selector:
    app: proxy-app
  ports:
    - name: http
      protocol: TCP
      port: 3001
      targetPort: 30001