version: "3"
x-omnistrate-my-account:
  AwsAccountId: '<accountId>'
  AwsBootstrapRoleAccountArn: 'arn:aws:iam::<accountId>:role/omnistrate-bootstrap-role'
services:
  postgres:
    image: njnjyyh/pg-proxy-demo:1
    ports:
      - 5432:5432
    x-omnistrate-compute:
      instanceTypes:
        - cloudProvider: aws
          apiParam: writerInstanceType
        - cloudProvider: gcp
          apiParam: writerInstanceType
    x-omnistrate-capabilities:
      autoscaling:
        maxReplicas: 1
        minReplicas: 1
      enableEndpointPerReplica: true
      serverlessConfiguration:
        imageURL: "docker.io/njnjyyh/omnistrate-generic-proxy:0.4"
        portsMappingProxyConfig:
          maxNumberOfClustersPerProxyInstance: 9
          numberOfPortsPerCluster: 1
        proxyName: "proxy"
        enableAutoStop: true
        minimumNodesInPool: 5
        targetPort: 5432
    environment:
      - POSTGRESQL_PASSWORD=$var.postgresqlPassword
      - POSTGRESQL_DATABASE=postgres
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_POSTGRES_PASSWORD=$var.postgresqlPassword
      - DATA_SOURCE_NAME=postgresql://postgres:{{ $var.postgresqlPassword }}@localhost:5432/postgres?sslmode=disable
      - SECURITY_CONTEXT_USER_ID=1001
      - SECURITY_CONTEXT_FS_GROUP=1001
      - SECURITY_CONTEXT_GROUP_ID=0
    x-omnistrate-api-params:
      - key: writerInstanceType
        description: Writer Instance Type
        name: Writer Instance Type
        type: String
        modifiable: true
        required: false
        export: true
        defaultValue: "t4g.medium"
      - key: postgresqlPassword
        description: Default DB Password
        name: Password
        type: String
        modifiable: false
        required: false
        export: false
        defaultValue: "postgres"
    x-omnistrate-mode-internal: false